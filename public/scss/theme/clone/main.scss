@import '../../_partial/functions';

@import '../../_partial/mixins';

@import 'colors';

@import '../../_partial/ansi';

@import url('https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700&subset=latin-ext');

body {

	#uwot {
		--prompt: '$';
		font: 8px "Proxima Nova", Helvetica, Arial, sans-serif;

		@include ansi(mapGet($theme-colors, 'ansi'));

		.terminal {
			font-family: monaco, 'Anonymous Pro', Consolas, "Lucida Console", monospace;
			color: mapGet($theme-colors, 'tag', 'text');
			background: mapGet($theme-colors, 'scheme', 'primary', 'bg');

			a {
				color: mapGet($theme-colors, 'tag', 'link');

				&:hover,
				&:active {
					color: mapGet($theme-colors, 'tag', 'hover');
					text-decoration: none;
				}

			}

			.header {
				border-color: mapGet($theme-colors, 'tag', 'border');
				background: mapGet($theme-colors, 'scheme', 'primary', 'bg');

				.indicator-container.loading {
					background-image: url("/scss/theme/clone/img/loader-clone.gif");
					background-image: url("/scss/theme/clone/img/loader-clone.svg");
				}

			}

			.output {
				width: 100%;
				min-height: 300px;

				.output-container {

					#UwotBrowseMsg {
						background-color: mapGet($theme-colors, 'scheme', 'primary', 'bg');
						border-color: mapGet($theme-colors, 'tag', 'border');

						&.info {
							background-color: mapGet($theme-colors, 'tag', 'link');
						}

						&.warn {
							background-color: mapGet($ansi-colors, 'yellow');
							color: mapGet($theme-colors, 'scheme', 'primary', 'fg');
						}

						&.error {
							background-color: mapGet($ansi-colors, 'red');
						}

					}

				}

				.uwot-browse-modal {
					background-color: mapGet($theme-colors, 'scheme', 'primary', 'bg');
				}

			}

			.cli {
				width: calc(100% - 2em);
				margin: 0.5em 0;
				border-color: mapGet($theme-colors, 'tag', 'border');

				form {

					.field {

						input,
						input:focus,
						input:active {
							color: mapGet($theme-colors, 'ansi', 'bright-black');
						}

					}

				}

			}

		}

	}

}

@media (prefers-color-scheme: dark) {

	body {

		#uwot {

			.terminal {
				color: mapGet($theme-colors, 'scheme', 'primary', 'bg');
				background-color: mapGet($theme-colors, 'scheme', 'primary', 'fg');

				a {
					color: mapGet($ansi-colors, 'blue');

					&:hover,
					&:active {
						color: mapGet($ansi-colors, 'cyan');
					}

				}

				.header {
					border-color: mapGet($theme-colors, 'scheme', 'secondary', 'bg');
					background-color: mapGet($theme-colors, 'scheme', 'primary', 'fg');

					.indicator-container.loading {
						background-image: url("/scss/theme/clone/img/loader-clone-dark.gif");
						background-image: url("/scss/theme/clone/img/loader-clone-dark.svg");
					}

				}

				.output {

					.output-container {

						#UwotBrowseMsg {
							background-color: mapGet($theme-colors, 'scheme', 'primary', 'fg');
							border-color: mapGet($theme-colors, 'scheme', 'secondary', 'bg');

							&.info {
								background-color: mapGet($theme-colors, 'tag', 'link');
								color: mapGet($theme-colors, 'scheme', 'primary', 'fg');
							}

							&.warn {
								background-color: mapGet($ansi-colors, 'yellow');
								color: mapGet($theme-colors, 'scheme', 'primary', 'fg');
							}

							&.error {
								background-color: mapGet($ansi-colors, 'red');
							}

						}

						> .uwot-browse-modal {
							background-color: mapGet($theme-colors, 'scheme', 'primary', 'fg');
						}

					}

				}

				.cli {
					border-color: mapGet($theme-colors, 'scheme', 'secondary', 'bg');
					background-color: mapGet($theme-colors, 'scheme', 'primary', 'fg');

					form {

						.field {

							input,
							input:focus,
							input:active {
								color: mapGet($theme-colors, 'scheme', 'primary', 'bg');
							}

						}

					}

				}

			}

		}

	}

}

@media (min-width: 642px) {

	body {

		#uwot {
			font-size: 10px;

		}

	}

}

@media (min-width: 1200px) {

	body {

		#uwot {
			font-size: 16px;
		}

	}

}

